stages:
  - init
  - test
  - sonar-scan
  - build
  - prepare-artifact
  - deploy-cerebra-on-pibrocks

variables:
  IMAGE: node:18-bullseye
  USER: cerebra2
  NGINX_DIR: /etc/nginx/html
  PROJECT_DIR: /cerebra

init:
  stage: init
  tags: ["lea"]
  script:
    - echo "pipeline initialized"
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"

static_analysis:
  image: ${IMAGE}
  stage: test
  allow_failure: false
  script:
    - echo "runing static analysis"
    - npm link @angular/cli
    - ng lint
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull
  tags: ["lea"]

run_tests:
  image: ${IMAGE}
  stage: test
  allow_failure: false
  before_script:
    - echo "runing unit tests"
    - apt-get update
    - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - apt install -y ./google-chrome*.deb;
    - export CHROME_BIN=/usr/bin/google-chrome
  script:
    - npm ci
    - npm link @angular/cli
    - ng test --code-coverage --watch=false --browsers=NoSandbox
  artifacts:
    paths:
      - $CI_PROJECT_DIR/coverage
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  tags: ["lea"]

sonarqube-check:
  stage: sonar-scan
  tags: ["lea"]
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - echo "runing sonarqube check"
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"

build_app:
  stage: build
  image: ${IMAGE}
  script:
    - echo "runing the build"
    - npm link @angular/cli
    - ng build --configuration production
  artifacts:
    expire_in: 12 hrs
    paths:
      - dist/cerebra/
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
  tags: ["lea"]

rearrange_build_artifacts:
  stage: prepare-artifact
  needs: [build_app]
  script:
    - echo "preparing the build artifact"
    - mkdir -p cerebra && mv dist/cerebra/* cerebra/
    - rm -rf ./dist
  artifacts:
    paths:
      - cerebra/
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
  tags: ["lea"]

deploy-cerebra-on-pibrocks:
  image: ${IMAGE}
  stage: deploy-cerebra-on-pibrocks
  before_script:
    - apk add git
    - apk add openssh
    - apk add --no-cache lftp
  variables:
    - USER: pib.rocks
    - HOST: ssh.starto.de
  script:
    - echo "runing the build"
    - npm link @angular/cli
    - ng build --configuration production
    - echo "preparing the build artifact"
    - mkdir -p cerebra && mv dist/cerebra/* cerebra/
    - rm -rf ./dist
    - apt-get update
    - apt install -y zip unzip
    - zip -r cerebra-latest.zip cerebra
    - ls -lk cerebra-latest.zip
    - pwd
    - mkdocs build
    - mkdir /root/.ssh
    - chmod 700 /root/.ssh
    - touch /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/known_hosts
    - ssh-keyscan -H $HOST >> /root/.ssh/known_hosts
    - lftp -e "mirror -e -P 4 --transfer-all --reverse -X .* --verbose site/ www/; quit" -u $USER,$PASSWORD sftp://$HOST -p 22
  tags: ["lea"]
