stages:
  - init
  # - dependencies
  - test
  - sonar-scan
  - build
  # - deploy

variables:
  IMAGE: node:18-bullseye

init:
  stage: init
  tags: ["lea"]
  script:
    - echo "pipeline initialized"
  only:
    # - merge_requests
    # - develop
    # - master
    - PR-80

static_analysis:
  image: ${IMAGE}
  stage: test
  allow_failure: true
  script:
    - echo "runing static analysis"
    - npm link @angular/cli
    - ng lint
  only:
    # - merge_requests
    # - develop
    # - master
    - PR-80
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull
  tags: ["lea"]

run_tests:
  image: ${IMAGE}
  stage: test
  allow_failure: false
  before_script:
    - echo "runing unit tests"
    - apt-get update
    - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - apt install -y ./google-chrome*.deb;
    - export CHROME_BIN=/usr/bin/google-chrome
  script:
    # - npm ci
    - npm link @angular/cli
    - ng test --code-coverage --watch=false --browsers=NoSandbox
  only:
    # - merge_requests
    # - develop
    # - master
    - PR-80
  tags: ["lea"]

sonarqube-check:
  stage: sonar-scan
  tags: ["lea"]
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - echo "runing sonarqube check"
    - sonar-scanner
  allow_failure: true
  only:
    # - merge_requests
    # - develop
    # - master
    - PR-80

build:
  stage: build
  image: ${IMAGE}
  script:
    - npm link @angular/cli
    - ng build --configuration production
    - ls -la ./dist/cerebra2
  artifacts:
    expire_in: 12 hrs
    paths:
    - $CI_PROJECT_DIR/dist
  only:
    - master
    - PR-80
  tags: ["lea"]