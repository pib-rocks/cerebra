stages:
  - init
  - dependencies
  # - build_image
  - static_analysis
  - test
  - build
  # - deploy_dev
  # - robot
  # - deploy_stable

# sonarqube-check:
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script:
#     - sonar-scanner
#   allow_failure: true
#   only:
#     - merge_requests
#     - master # or the name of your main branch
#     - develop


init:
  stage: init
  tags: ["lea"]
  script:
    - echo pipeline initialized

install_dependencies:
  image: node.18-alpine
  stage: dependencies
  script:
    - npm install
  only:
    - merge_requests
    - develop
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
  tags: ["lea"]

static_analysis:
  image: node:18-alpine
  stage: static_analysis
  script:
    - npm link @angular/cli
    - ng lint
  only:
    - merge_requests
    - develop
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull
  tags: ["lea"]

test:
  stage: test
  image: trion/ng-cli-karma
  allow_failure: false
  script:
  - ng test --progress false --watch false
  only:
    - merge_requests
    - develop
  tags: ["lea"]


